# Generated by Django 4.2.1 on 2023-07-28 21:53

from decimal import Decimal
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lyka_payment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CouponType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The coupon code.', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the coupon.', null=True)),
                ('discount_amount', models.DecimalField(decimal_places=2, help_text='Discount amount in the currency.', max_digits=10)),
                ('maximum_discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Discount percentage.', max_digits=5, null=True)),
                ('minimum_purchase_amount', models.DecimalField(decimal_places=2, default=0, help_text='Minimum purchase amount for the coupon to be valid.', max_digits=10)),
                ('max_usage_limit', models.PositiveIntegerField(default=1, help_text='Maximum number of times the coupon can be used.')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Start date and time of the coupon validity.')),
                ('end_date', models.DateTimeField(help_text='End date and time of the coupon validity.')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the coupon is currently active.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the coupon was created.')),
            ],
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OrderTransaction',
            fields=[
                ('entry', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('ref_no', models.UUIDField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('is_successful', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalesReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_sales', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sales_by_customer', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('wallet_id', models.UUIDField(primary_key=True, serialize=False)),
                ('wallet_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('last_transaction_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_limit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('transaction_count', models.PositiveIntegerField(default=0)),
            ],
        ),
    ]
